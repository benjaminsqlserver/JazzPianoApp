name: Deploy to GitHub Pages

# Run workflow on every push to the main branch
on:
  push:
    branches: [ main ]
    paths: [ "**" ]  # Adjust if your app is in a subfolder

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-to-github-pages:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Adjust to match your .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish .NET Core Project
      run: dotnet publish -c Release -o release --nologo

    # Change base-tag in index.html from '/' to 'JazzPianoApp' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html
      run: sed -i 's/<base href="\/" \/>/<base href="\/JazzPianoApp\/" \/>/g' release/wwwroot/index.html

    # Copy index.html to 404.html to serve the same file when a file is not found
    - name: Copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # Add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: 'release/wwwroot'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
